experiments
{
    '_id': '0', # experiment ID
    'sources': [
	{'_id': 0,
	 'name': 'SyntheticAggregateSource',
	 'n_train_activations': {'fridge': 100, 'tv': 50},
	 'input_stats': {'mean': 0.4, 'std': 0.5}
	}
    ],
    'trainer': {
	'loss_function': 'mse',
	'update_function': 'NAG',
	'learning_rates': {
	    0: 0.001
	}
    },
    'versions': {
	'theano': '0.7.0',
	'python': '2.7.10',
	'lasagne': '0.0.1',
	'neuralnilm': '2015-01-01'
    },
    'model': {
	0: {
	    'layers': [
		{'type': 'Input', 'output_shape': (1, 2, 4)},
		{'type': 'Dense', 'output_shape': (1, 2, 4)},
		{'type': 'Concat', 'input_layers': [0, 1],
		 'concat_axis': 0, 'output_shape': (2, 2, 4)}
	    ],
	    'n_trainable_parameters': 10000
	},
	'train_iterations': 100
    }
}


train_scores
{
    'experiment_id': 0,
    'iteration': 1000,
    'loss': 0.1E-3,
    'source_name': 'SyntheticAggregateSource'
}

validation_scores
{
    'experiment_id': 0,
    'iteration': 0,
    'source_name': 'SyntheticAggregateSource',
    'fold': 'train', # or unseen_appliances or unseen_activations_of_seen_appliances
    'metric_type': 'regression',
    'scores': {
	'mse': 0.1E-2,
	'energy_correctly_assigned': 0.1E-4
    }
}

Or for classificaiton:
{
    'experiment_id': 0,
    'iteration': 0,
    'source_name': 'SyntheticAggregateSource',
    'fold': 'train',
    'num_states': 2,
    'metric_type': 'classification',
    'scores': {
	'f1': 0.1,
	'precision': 0.1,
	'recall': 0.1
    }
}

Or for disaggregation
{
    'experiment_id': 0,
    'iteration': 0,
    'source_name': 'raw_net_output',   # or 'after_post_processing'    
    'fold': 'train',
    'num_states': 2,
    'metric_type': 'classification',
    'scores': {
	'f1': 0.1,
	'precision': 0.1,
	'recall': 0.1
    }
}
